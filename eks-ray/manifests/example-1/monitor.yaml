# taken and adapted from https://github.com/ray-project/kuberay/tree/master/config/prometheus
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: ray-workers-monitor
  namespace: observability
  labels:
    # `release: $HELM_RELEASE`: Prometheus can only detect PodMonitor with this label.
    release: observability
spec:
  jobLabel: ray-workers
  # Only select Kubernetes Pods in the "default" namespace.
  namespaceSelector:
    matchNames:
      - default
  # Only select Kubernetes Pods with "matchLabels".
  selector:
    matchLabels:
      ray.io/node-type: worker
  # A list of endpoints allowed as part of this PodMonitor.
  podMetricsEndpoints:
  - port: metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ray-head-monitor
  namespace: observability
  # `release: $HELM_RELEASE`: Prometheus can only detect Rule with this label.
  labels:
    release: observability
spec:
  jobLabel: ray-head
  # Only select Kubernetes Services in the "default" namespace.
  namespaceSelector:
    matchNames:
      - default
  # Only select Kubernetes Services with "matchLabels".
  selector:
    matchLabels:
      ray.io/node-type: head
  # A list of endpoints allowed as part of this ServiceMonitor.
  endpoints:
    - port: metrics
    - port: as-metrics # autoscaler metrics
    - port: dash-metrics # dashboard metrics
  targetLabels:
  - ray.io/cluster
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: ray-cluster-gcs-rules
  namespace: observability
  labels:
    # `release: $HELM_RELEASE`: Prometheus can only detect Rule with this label.
    release: observability
spec:
  groups:
  - interval: 30s
    name: ray-cluster-main-staging-gcs.rules
    rules:
    - expr: |2
                      (
                        100 * (
                                sum(
                                     rate(
                                           ray_gcs_update_resource_usage_time_bucket{container="ray-head", le="20.0"}[30d]
                                     )
                                )
                                /
                                sum(
                                     rate(
                                           ray_gcs_update_resource_usage_time_count{container="ray-head"}[30d]
                                     )
                                )
                        )
                      )
      record: ray_gcs_availability_30d
    - alert: MissingMetricRayGlobalControlStore
      annotations:
        description: Ray GCS is not emitting any metrics for Resource Update requests
        summary: Ray GCS is not emitting metrics anymore
      expr: |2
                      (
                       absent(ray_gcs_update_resource_usage_time_bucket) == 1
                      )
      for: 5m
      labels:
        severity: critical
